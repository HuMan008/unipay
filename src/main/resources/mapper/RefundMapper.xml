<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.gotoil.unipay.model.mapper.RefundMapper">
    <resultMap id="BaseResultMap" type="cn.gotoil.unipay.model.entity.Refund">
        <id column="refund_order_id" jdbcType="CHAR" property="refundOrderId"/>
        <result column="order_id" jdbcType="CHAR" property="orderId"/>
        <result column="order_fee" jdbcType="INTEGER" property="orderFee"/>
        <result column="app_order_refund_no" jdbcType="CHAR" property="appOrderRefundNo"/>
        <result column="app_order_no" jdbcType="CHAR" property="appOrderNo"/>
        <result column="apply_fee" jdbcType="INTEGER" property="applyFee"/>
        <result column="apply_datetime" jdbcType="TIMESTAMP" property="applyDatetime"/>
        <result column="descp" jdbcType="VARCHAR" property="descp"/>
        <result column="process_result" jdbcType="TINYINT" property="processResult"/>
        <result column="fail_msg" jdbcType="VARCHAR" property="failMsg"/>
        <result column="fee" jdbcType="INTEGER" property="fee"/>
        <result column="status_update_datetime" jdbcType="TIMESTAMP" property="statusUpdateDatetime"/>
        <result column="created_at" jdbcType="TIMESTAMP" property="createdAt"/>
        <result column="update_at" jdbcType="TIMESTAMP" property="updateAt"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    refund_order_id, order_id, order_fee, app_order_refund_no, app_order_no, apply_fee, 
    apply_datetime, descp, process_result, fail_msg, fee, status_update_datetime, created_at, 
    update_at
  </sql>
    <select id="selectByExample" parameterType="cn.gotoil.unipay.model.entity.RefundExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from dp_refund
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from dp_refund
        where refund_order_id = #{refundOrderId,jdbcType=CHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from dp_refund
    where refund_order_id = #{refundOrderId,jdbcType=CHAR}
  </delete>
    <delete id="deleteByExample" parameterType="cn.gotoil.unipay.model.entity.RefundExample">
        delete from dp_refund
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.gotoil.unipay.model.entity.Refund">
    insert into dp_refund (refund_order_id, order_id, order_fee, 
      app_order_refund_no, app_order_no, apply_fee, 
      apply_datetime, descp, process_result, 
      fail_msg, fee, status_update_datetime, 
      created_at, update_at)
    values (#{refundOrderId,jdbcType=CHAR}, #{orderId,jdbcType=CHAR}, #{orderFee,jdbcType=INTEGER}, 
      #{appOrderRefundNo,jdbcType=CHAR}, #{appOrderNo,jdbcType=CHAR}, #{applyFee,jdbcType=INTEGER}, 
      #{applyDatetime,jdbcType=TIMESTAMP}, #{descp,jdbcType=VARCHAR}, #{processResult,jdbcType=TINYINT}, 
      #{failMsg,jdbcType=VARCHAR}, #{fee,jdbcType=INTEGER}, #{statusUpdateDatetime,jdbcType=TIMESTAMP}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updateAt,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="cn.gotoil.unipay.model.entity.Refund">
        insert into dp_refund
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="refundOrderId != null">
                refund_order_id,
            </if>
            <if test="orderId != null">
                order_id,
            </if>
            <if test="orderFee != null">
                order_fee,
            </if>
            <if test="appOrderRefundNo != null">
                app_order_refund_no,
            </if>
            <if test="appOrderNo != null">
                app_order_no,
            </if>
            <if test="applyFee != null">
                apply_fee,
            </if>
            <if test="applyDatetime != null">
                apply_datetime,
            </if>
            <if test="descp != null">
                descp,
            </if>
            <if test="processResult != null">
                process_result,
            </if>
            <if test="failMsg != null">
                fail_msg,
            </if>
            <if test="fee != null">
                fee,
            </if>
            <if test="statusUpdateDatetime != null">
                status_update_datetime,
            </if>
            <if test="createdAt != null">
                created_at,
            </if>
            <if test="updateAt != null">
                update_at,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="refundOrderId != null">
                #{refundOrderId,jdbcType=CHAR},
            </if>
            <if test="orderId != null">
                #{orderId,jdbcType=CHAR},
            </if>
            <if test="orderFee != null">
                #{orderFee,jdbcType=INTEGER},
            </if>
            <if test="appOrderRefundNo != null">
                #{appOrderRefundNo,jdbcType=CHAR},
            </if>
            <if test="appOrderNo != null">
                #{appOrderNo,jdbcType=CHAR},
            </if>
            <if test="applyFee != null">
                #{applyFee,jdbcType=INTEGER},
            </if>
            <if test="applyDatetime != null">
                #{applyDatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="descp != null">
                #{descp,jdbcType=VARCHAR},
            </if>
            <if test="processResult != null">
                #{processResult,jdbcType=TINYINT},
            </if>
            <if test="failMsg != null">
                #{failMsg,jdbcType=VARCHAR},
            </if>
            <if test="fee != null">
                #{fee,jdbcType=INTEGER},
            </if>
            <if test="statusUpdateDatetime != null">
                #{statusUpdateDatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="createdAt != null">
                #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updateAt != null">
                #{updateAt,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.gotoil.unipay.model.entity.RefundExample" resultType="java.lang.Long">
        select count(*) from dp_refund
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update dp_refund
        <set>
            <if test="record.refundOrderId != null">
                refund_order_id = #{record.refundOrderId,jdbcType=CHAR},
            </if>
            <if test="record.orderId != null">
                order_id = #{record.orderId,jdbcType=CHAR},
            </if>
            <if test="record.orderFee != null">
                order_fee = #{record.orderFee,jdbcType=INTEGER},
            </if>
            <if test="record.appOrderRefundNo != null">
                app_order_refund_no = #{record.appOrderRefundNo,jdbcType=CHAR},
            </if>
            <if test="record.appOrderNo != null">
                app_order_no = #{record.appOrderNo,jdbcType=CHAR},
            </if>
            <if test="record.applyFee != null">
                apply_fee = #{record.applyFee,jdbcType=INTEGER},
            </if>
            <if test="record.applyDatetime != null">
                apply_datetime = #{record.applyDatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.descp != null">
                descp = #{record.descp,jdbcType=VARCHAR},
            </if>
            <if test="record.processResult != null">
                process_result = #{record.processResult,jdbcType=TINYINT},
            </if>
            <if test="record.failMsg != null">
                fail_msg = #{record.failMsg,jdbcType=VARCHAR},
            </if>
            <if test="record.fee != null">
                fee = #{record.fee,jdbcType=INTEGER},
            </if>
            <if test="record.statusUpdateDatetime != null">
                status_update_datetime = #{record.statusUpdateDatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.createdAt != null">
                created_at = #{record.createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateAt != null">
                update_at = #{record.updateAt,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update dp_refund
        set refund_order_id = #{record.refundOrderId,jdbcType=CHAR},
        order_id = #{record.orderId,jdbcType=CHAR},
        order_fee = #{record.orderFee,jdbcType=INTEGER},
        app_order_refund_no = #{record.appOrderRefundNo,jdbcType=CHAR},
        app_order_no = #{record.appOrderNo,jdbcType=CHAR},
        apply_fee = #{record.applyFee,jdbcType=INTEGER},
        apply_datetime = #{record.applyDatetime,jdbcType=TIMESTAMP},
        descp = #{record.descp,jdbcType=VARCHAR},
        process_result = #{record.processResult,jdbcType=TINYINT},
        fail_msg = #{record.failMsg,jdbcType=VARCHAR},
        fee = #{record.fee,jdbcType=INTEGER},
        status_update_datetime = #{record.statusUpdateDatetime,jdbcType=TIMESTAMP},
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
        update_at = #{record.updateAt,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.gotoil.unipay.model.entity.Refund">
        update dp_refund
        <set>
            <if test="orderId != null">
                order_id = #{orderId,jdbcType=CHAR},
            </if>
            <if test="orderFee != null">
                order_fee = #{orderFee,jdbcType=INTEGER},
            </if>
            <if test="appOrderRefundNo != null">
                app_order_refund_no = #{appOrderRefundNo,jdbcType=CHAR},
            </if>
            <if test="appOrderNo != null">
                app_order_no = #{appOrderNo,jdbcType=CHAR},
            </if>
            <if test="applyFee != null">
                apply_fee = #{applyFee,jdbcType=INTEGER},
            </if>
            <if test="applyDatetime != null">
                apply_datetime = #{applyDatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="descp != null">
                descp = #{descp,jdbcType=VARCHAR},
            </if>
            <if test="processResult != null">
                process_result = #{processResult,jdbcType=TINYINT},
            </if>
            <if test="failMsg != null">
                fail_msg = #{failMsg,jdbcType=VARCHAR},
            </if>
            <if test="fee != null">
                fee = #{fee,jdbcType=INTEGER},
            </if>
            <if test="statusUpdateDatetime != null">
                status_update_datetime = #{statusUpdateDatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="createdAt != null">
                created_at = #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updateAt != null">
                update_at = #{updateAt,jdbcType=TIMESTAMP},
            </if>
        </set>
        where refund_order_id = #{refundOrderId,jdbcType=CHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.gotoil.unipay.model.entity.Refund">
    update dp_refund
    set order_id = #{orderId,jdbcType=CHAR},
      order_fee = #{orderFee,jdbcType=INTEGER},
      app_order_refund_no = #{appOrderRefundNo,jdbcType=CHAR},
      app_order_no = #{appOrderNo,jdbcType=CHAR},
      apply_fee = #{applyFee,jdbcType=INTEGER},
      apply_datetime = #{applyDatetime,jdbcType=TIMESTAMP},
      descp = #{descp,jdbcType=VARCHAR},
      process_result = #{processResult,jdbcType=TINYINT},
      fail_msg = #{failMsg,jdbcType=VARCHAR},
      fee = #{fee,jdbcType=INTEGER},
      status_update_datetime = #{statusUpdateDatetime,jdbcType=TIMESTAMP},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      update_at = #{updateAt,jdbcType=TIMESTAMP}
    where refund_order_id = #{refundOrderId,jdbcType=CHAR}
  </update>
</mapper>