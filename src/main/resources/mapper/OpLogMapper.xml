<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.gotoil.unipay.model.mapper.OpLogMapper">
    <resultMap id="BaseResultMap" type="cn.gotoil.unipay.model.entity.OpLog">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="op_user_name" jdbcType="CHAR" property="opUserName"/>
        <result column="op_type" jdbcType="TINYINT" property="opType"/>
        <result column="descp" jdbcType="CHAR" property="descp"/>
        <result column="call_method" jdbcType="VARCHAR" property="callMethod"/>
        <result column="method_args" jdbcType="VARCHAR" property="methodArgs"/>
        <result column="method_return" jdbcType="VARCHAR" property="methodReturn"/>
        <result column="created_at" jdbcType="TIMESTAMP" property="createdAt"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, op_user_name, op_type, descp, call_method, method_args, method_return, created_at
  </sql>
    <select id="selectByExample" parameterType="cn.gotoil.unipay.model.entity.OpLogExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from dp_oplog
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from dp_oplog
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from dp_oplog
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="cn.gotoil.unipay.model.entity.OpLogExample">
        delete from dp_oplog
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.gotoil.unipay.model.entity.OpLog">
    insert into dp_oplog (id, op_user_name, op_type, 
      descp, call_method, method_args, 
      method_return, created_at)
    values (#{id,jdbcType=INTEGER}, #{opUserName,jdbcType=CHAR}, #{opType,jdbcType=TINYINT}, 
      #{descp,jdbcType=CHAR}, #{callMethod,jdbcType=VARCHAR}, #{methodArgs,jdbcType=VARCHAR}, 
      #{methodReturn,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="cn.gotoil.unipay.model.entity.OpLog">
        insert into dp_oplog
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="opUserName != null">
                op_user_name,
            </if>
            <if test="opType != null">
                op_type,
            </if>
            <if test="descp != null">
                descp,
            </if>
            <if test="callMethod != null">
                call_method,
            </if>
            <if test="methodArgs != null">
                method_args,
            </if>
            <if test="methodReturn != null">
                method_return,
            </if>
            <if test="createdAt != null">
                created_at,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="opUserName != null">
                #{opUserName,jdbcType=CHAR},
            </if>
            <if test="opType != null">
                #{opType,jdbcType=TINYINT},
            </if>
            <if test="descp != null">
                #{descp,jdbcType=CHAR},
            </if>
            <if test="callMethod != null">
                #{callMethod,jdbcType=VARCHAR},
            </if>
            <if test="methodArgs != null">
                #{methodArgs,jdbcType=VARCHAR},
            </if>
            <if test="methodReturn != null">
                #{methodReturn,jdbcType=VARCHAR},
            </if>
            <if test="createdAt != null">
                #{createdAt,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.gotoil.unipay.model.entity.OpLogExample" resultType="java.lang.Long">
        select count(*) from dp_oplog
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update dp_oplog
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.opUserName != null">
                op_user_name = #{record.opUserName,jdbcType=CHAR},
            </if>
            <if test="record.opType != null">
                op_type = #{record.opType,jdbcType=TINYINT},
            </if>
            <if test="record.descp != null">
                descp = #{record.descp,jdbcType=CHAR},
            </if>
            <if test="record.callMethod != null">
                call_method = #{record.callMethod,jdbcType=VARCHAR},
            </if>
            <if test="record.methodArgs != null">
                method_args = #{record.methodArgs,jdbcType=VARCHAR},
            </if>
            <if test="record.methodReturn != null">
                method_return = #{record.methodReturn,jdbcType=VARCHAR},
            </if>
            <if test="record.createdAt != null">
                created_at = #{record.createdAt,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update dp_oplog
        set id = #{record.id,jdbcType=INTEGER},
        op_user_name = #{record.opUserName,jdbcType=CHAR},
        op_type = #{record.opType,jdbcType=TINYINT},
        descp = #{record.descp,jdbcType=CHAR},
        call_method = #{record.callMethod,jdbcType=VARCHAR},
        method_args = #{record.methodArgs,jdbcType=VARCHAR},
        method_return = #{record.methodReturn,jdbcType=VARCHAR},
        created_at = #{record.createdAt,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.gotoil.unipay.model.entity.OpLog">
        update dp_oplog
        <set>
            <if test="opUserName != null">
                op_user_name = #{opUserName,jdbcType=CHAR},
            </if>
            <if test="opType != null">
                op_type = #{opType,jdbcType=TINYINT},
            </if>
            <if test="descp != null">
                descp = #{descp,jdbcType=CHAR},
            </if>
            <if test="callMethod != null">
                call_method = #{callMethod,jdbcType=VARCHAR},
            </if>
            <if test="methodArgs != null">
                method_args = #{methodArgs,jdbcType=VARCHAR},
            </if>
            <if test="methodReturn != null">
                method_return = #{methodReturn,jdbcType=VARCHAR},
            </if>
            <if test="createdAt != null">
                created_at = #{createdAt,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.gotoil.unipay.model.entity.OpLog">
    update dp_oplog
    set op_user_name = #{opUserName,jdbcType=CHAR},
      op_type = #{opType,jdbcType=TINYINT},
      descp = #{descp,jdbcType=CHAR},
      call_method = #{callMethod,jdbcType=VARCHAR},
      method_args = #{methodArgs,jdbcType=VARCHAR},
      method_return = #{methodReturn,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>